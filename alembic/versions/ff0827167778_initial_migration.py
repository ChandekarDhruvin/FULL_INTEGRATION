"""Initial migration

Revision ID: ff0827167778
Revises: 
Create Date: 2025-04-15 17:28:15.272705

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff0827167778'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_employee_id'), 'employee', ['id'], unique=False)
    op.create_table('meeting',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meeting_id'), 'meeting', ['id'], unique=False)
    op.create_table('employee_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.String(), nullable=False),
    sa.Column('overall_sentiment_score', sa.Float(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('employee_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_skills_id'), 'employee_skills', ['id'], unique=False)
    op.create_table('meeting_transcript',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meeting_transcript_id'), 'meeting_transcript', ['id'], unique=False)
    op.create_table('rolling_sentiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('rolling_sentiment', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meeting_id', 'name', name='_unique_meeting_person')
    )
    op.create_index(op.f('ix_rolling_sentiment_id'), 'rolling_sentiment', ['id'], unique=False)
    op.create_table('skill_recommendation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.String(), nullable=False),
    sa.Column('skill_recommendation', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skill_recommendation_id'), 'skill_recommendation', ['id'], unique=False)
    op.create_table('task_recommendation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.String(), nullable=False),
    sa.Column('task', sa.String(), nullable=True),
    sa.Column('assigned_by', sa.String(), nullable=True),
    sa.Column('assigned_to', sa.String(), nullable=True),
    sa.Column('deadline', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_recommendation_id'), 'task_recommendation', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_recommendation_id'), table_name='task_recommendation')
    op.drop_table('task_recommendation')
    op.drop_index(op.f('ix_skill_recommendation_id'), table_name='skill_recommendation')
    op.drop_table('skill_recommendation')
    op.drop_index(op.f('ix_rolling_sentiment_id'), table_name='rolling_sentiment')
    op.drop_table('rolling_sentiment')
    op.drop_index(op.f('ix_meeting_transcript_id'), table_name='meeting_transcript')
    op.drop_table('meeting_transcript')
    op.drop_index(op.f('ix_employee_skills_id'), table_name='employee_skills')
    op.drop_table('employee_skills')
    op.drop_index(op.f('ix_meeting_id'), table_name='meeting')
    op.drop_table('meeting')
    op.drop_index(op.f('ix_employee_id'), table_name='employee')
    op.drop_table('employee')
    # ### end Alembic commands ###
